<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.user.service.impl.UserManageMapper">
	
	<select id="selectUserInfo" parameterType="hashmap" resultType="loginVO">
		select
			USER_SE_CODE as id,
			USER_NM as name,
			PHOTO_STRE_FILE_NM as profileImageId,
			TEACHER_SE_CODE as userType,
			SCHUL_CODE as userSpaceInfo,
			CONCAT(ST_GRADE, '학년 ', ST_CLASS, '반') as userSpaceOrgInfo,
			USER_ID as uniqId,
			CONFM_AT as isFirstInvite,
			SEXDSTN as sex,
			EMAIL_ADRES as userEmail
		from COMTNMBER
		where USER_ID = #{uniqId}
	</select>
		
	<select id="checkUserById" parameterType="String" resultType="boolean">
	    select
	        CASE 
	            WHEN count(*) > 0 THEN true
	            ELSE false
	        END as userExists
	    from COMTNMBER
	    where USER_SE_CODE = #{id}
	</select>
	
	<select id="authorizationUser" parameterType="hashmap" resultType="boolean">
	    select
	        CASE 
	            WHEN count(*) > 0 THEN true
	            ELSE false
	        END as userExists
	    from COMTNMBER
	    where USER_ID = #{uniqId}
	</select>
	
	<insert id="insertUserInfo" parameterType="hashmap">
		insert into COMTNMBER(
			USER_ID, 
			USER_SE_CODE,
			PASSWORD, 
			USER_NM, 
			PHOTO_STRE_FILE_NM,
			EMAIL_ADRES, 
			SEXDSTN,
			CONFM_AT,
			ST_GRADE, 
			ST_CLASS, 
			TEACHER_SE_CODE, 
			SCHUL_CODE,
			FRST_REGIST_PNTTM,
			DN,
			BRTHDY
		)
		values (
			#{uniqId},
			#{id},
			#{password},
			#{name},
			#{profileImageId}, 
			#{userEmail},
			#{sex}, 
			'N', 
			#{gradeNm},
			#{classNm},
			#{userType},
			#{userSpaceInfo},
			now(),
			#{relationInfo},
			#{brthdy}
		)
	</insert>
	
	<insert id="insertUserScrtyEstbs" parameterType="hashmap">
		insert into COMTNEMPLYRSCRTYESTBS(SCRTY_DTRMN_TRGET_ID, AUTHOR_CODE)
		values (#{uniqId}, #{userRole})
	</insert>
	
	<update id="updateUserInfo" parameterType="hashmap">
		UPDATE COMTNMBER
		SET
			USER_NM = #{name}, 
			PASSWORD = #{password}, 
			PHOTO_STRE_FILE_NM = #{profileImageId}, 
			EMAIL_ADRES = #{userEmail}, 
			SEXDSTN = #{sex}, 
			TEACHER_SE_CODE = #{userType}, 
			SCHUL_CODE = #{userSpaceInfo}, 
			ST_GRADE = #{gradeNm},
			ST_CLASS = #{classNm},
			LAST_UPDUSR_PNTTM = now(),
			LAST_UPDUSR_ID = #{uniqId}
		WHERE USER_ID = #{uniqId}
	</update>

	<select id="selectStudentSelList" parameterType="hashmap" resultType="selVO">
		with sub as (
			SELECT
				a.POLL_ID,
				a.POLL_STATUS
			FROM COMTNBBSPOOLMANAGE a
			WHERE a.USER_ID = #{uniqId}
		)
		SELECT 
			mstr.POLL_NM as pollNm,
			mstr.POLL_ID as pollId,
			mstr.POLL_BGNDE as startDate,
			mstr.POLL_ENDDE as endDate,
			case when sub.POLL_STATUS is null then 'todo' else sub.POLL_STATUS end as status,
			case when cast(mstr.POLL_ENDDE as date) <![CDATA[<=]]> cast(now() as date) then false else true end as expired
		FROM COMTNBBSPOLL mstr
		left join sub
		on mstr.POLL_ID = sub.POLL_ID
	</select>
	
	<select id="selectTeacherSelList" parameterType="hashmap" resultType="selVO">
		with teacher_info as (
			select
				SCHUL_CODE,
				ST_GRADE,
				ST_CLASS
			from COMTNMBER
			where USER_ID = #{uniqId}
		)
		, mstr as (
			select
				a.POLL_ID,
				a.POLL_NM,
				a.POLL_BGNDE,
				a.POLL_ENDDE,
				case when cast(a.POLL_ENDDE as date) <![CDATA[<]]> cast(now() as date) then 1 else 0 end as expired,
				b.USER_ID,
				sub.SCHUL_CODE
			from COMTNBBSPOLL a, COMTNMBER b
			join teacher_info sub
			on b.SCHUL_CODE = sub.SCHUL_CODE
			and b.ST_GRADE = sub.ST_GRADE
			and b.ST_CLASS = sub.ST_CLASS
			left join COMTNEMPLYRSCRTYESTBS sub2
			on b.USER_ID = sub2.SCRTY_DTRMN_TRGET_ID
			where sub2.AUTHOR_CODE = 'ROLE_STUDENT'
			group by a.POLL_ID, b.USER_ID
		)
		select
			group_concat(mstr.POLL_ID order by mstr.POLL_ID separator ",") as pollIdList,
			group_concat(mstr.POLL_NM order by mstr.POLL_ID separator ",") as pollNmList,
			group_concat(mstr.POLL_BGNDE order by mstr.POLL_ID separator ",") as startDate,
			group_concat(mstr.POLL_ENDDE order by mstr.POLL_ID separator ",") as endDate,
			group_concat(mstr.expired order by mstr.POLL_ID separator ",") as expiredList,
			mstr.USER_ID as userId,
			sub.USER_NM as name,
			sub.EMAIL_ADRES as email,
			concat(sub.ST_GRADE, '학년 ', sub.ST_CLASS, '반') as classInfo,
			sub.SEXDSTN as sex,
			group_concat(case when sub2.POLL_STATUS = 'done' then true else false end order by mstr.POLL_ID separator ",") as isParticipateList
		from mstr
		left join COMTNMBER sub
		on mstr.USER_ID = sub.USER_ID
		left join COMTNBBSPOOLMANAGE sub2
		on mstr.USER_ID = sub2.USER_ID
		and mstr.POLL_ID = sub2.POLL_ID
		group by mstr.USER_ID, sub.USER_NM, sub.EMAIL_ADRES, sub.ST_GRADE, sub.ST_CLASS
	</select>
	
	<select id="isReallyTeacher" parameterType="String" resultType="Boolean">
		select
			case when AUTHOR_CODE='ROLE_TEACHER' then true else false end as isTeacher
		from COMTNEMPLYRSCRTYESTBS
		where SCRTY_DTRMN_TRGET_ID = #{uniqId}
	</select>
</mapper>